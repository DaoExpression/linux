table <webserver> { 192.168.10.20 }

log state changes
log connection

http protocol "http" {
	# lets log various extra things to the log
	match header log "Host"
	match header log "X-Forwarded-For"
	match header log "User-Agent"
	match header log "Referer"
	match url log
	# Return Errors
	return error
	# Update header passed to the httpd server
	match request header set "X-Forwarded-For" value "$REMOTE_ADDR"
	match request header set "X-Forwarded-By" value "$SERVER_ADDR:$SERVER_PORT"
	# Security HTTP headers response
	match response header remove "Server"
	match response header append "Strict-Transport-Security" value "max-age=31536000; includeSubDomains"
	match response header append "X-Frame-Options" value "stkapp.ddns.net"
	match response header append "X-XSS-Protection" value "1; mode=block"
	match response header append "X-Content-Type-Options" value "nosniff"
	match response header append "Referrer-Policy" value "strict-origin"
	match response header append "Content-Security-Policy" value "default-src https:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; script-src 'self' unsafe-inline' 'unsafe-eval'"
	match response header append "Permissions-Policy" value "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"
	# set recommended tcp options
	tcp { nodelay, socket buffer 65536, backlog 100 }
	block path "/cgi-bin/*" value "*command=*"
	pass request forward to <webserver>
}
http protocol "https" {
	# lets log various extra things to the log
	match header log "Host"
	match header log "X-Forwarded-For"
	match header log "User-Agent"
	match header log "Referer"
	match url log
	# Update header passed to the httpd server
	match request header set "X-Forwarded-For" value "$REMOTE_ADDR"
	match request header set "X-Forwarded-By" value "$SERVER_ADDR:$SERVER_PORT"
	# Security HTTP headers response
	#match response header remove "Server"
	match response header append "Strict-Transport-Security" value "max-age=31536000; includeSubDomains"
	match response header append "X-Frame-Options" value "stkapp.ddns.net"
	match response header append "X-XSS-Protection" value "1; mode=block"
	match response header append "X-Content-Type-Options" value "nosniff"
	match response header append "Referrer-Policy" value "strict-origin"
	match response header append "Content-Security-Policy" value "default-src https:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; script-src 'self' unsafe-inline' 'unsafe-eval'"
	match response header append "Permissions-Policy" value "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"
	# set recommended tcp options
	tcp { nodelay, socket buffer 65536, backlog 100 }
	#tls { no tlsv1.0, ciphers "HIGH:!aNULL" }
	tls { no tlsv1.0, ciphers "HIGH:!aNULL:!SSLv3:!DSS:!ECDSA:!RSA:-ECDH:ECDHE:+SHA384:+SHA256" }
	block path "/cgi-bin/*" value "*command=*"
}

relay "http_stkapp.ddns.net" {
	listen on 192.168.1.200 port 80
	protocol "http"
	forward to <webserver> port 80 mode loadbalance check tcp
}

relay "ssl_stkapp.ddns.net" {
	listen on 192.168.10.20 port 443
	protocol "https"
	forward to <webserver> port 443 mode loadbalance check tcp
}
